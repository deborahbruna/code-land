{"ast":null,"code":"import axios from \"axios\";\nlet token = '';\nconst api = axios.create({\n  baseURL: \"/\"\n});\napi.interceptors.request.use(config => {\n  config.headers.Authorization = token ? `Bearer ${token}` : '';\n  return config;\n}, error => {\n  debugger;\n  return Promise.reject(error);\n}); // Response interceptor for API calls\n\napi.interceptors.response.use(response => {\n  debugger; // if (response.data.token && response.data.token !== token) {\n  // }\n\n  return response;\n}, error => {\n  debugger;\n\n  if (error.response.status === 403) {// refreshToken()\n  }\n});\nexport default api;","map":{"version":3,"names":["axios","token","api","create","baseURL","interceptors","request","use","config","headers","Authorization","error","Promise","reject","response","status"],"sources":["/Users/deborahberto/workspaces/code-land/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\nlet token = '';\n\nconst api = axios.create({\n  baseURL: \"/\",\n});\n\napi.interceptors.request.use(\n  config => {\n    config.headers.Authorization = token ? `Bearer ${token}` : '';\n    return config;\n  },\n  error => {\n    debugger\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for API calls\napi.interceptors.response.use(\n  response => {\n    debugger\n    // if (response.data.token && response.data.token !== token) {\n    // }\n\n    return response;\n  },\n  error => {\n    debugger\n    if (error.response.status === 403) {\n      // refreshToken()\n    }\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,KAAK,GAAG,EAAZ;AAEA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;EACvBC,OAAO,EAAE;AADc,CAAb,CAAZ;AAIAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACEC,MAAM,IAAI;EACRA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+BT,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,EAA3D;EACA,OAAOO,MAAP;AACD,CAJH,EAKEG,KAAK,IAAI;EACP;EACA,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CARH,E,CAWA;;AACAT,GAAG,CAACG,YAAJ,CAAiBS,QAAjB,CAA0BP,GAA1B,CACEO,QAAQ,IAAI;EACV,SADU,CAEV;EACA;;EAEA,OAAOA,QAAP;AACD,CAPH,EAQEH,KAAK,IAAI;EACP;;EACA,IAAIA,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC,CACjC;EACD;AACF,CAbH;AAgBA,eAAeb,GAAf"},"metadata":{},"sourceType":"module"}