{"ast":null,"code":"var _jsxFileName = \"/Users/deborahberto/workspaces/code-land/client/src/Home/Regiter.js\";\nimport React from 'react';\nimport Formik from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: '',\n        email: '',\n        password: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: _ref2 => {\n        let {\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Formik","Register","name","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"sources":["/Users/deborahberto/workspaces/code-land/client/src/Home/Regiter.js"],"sourcesContent":["import React from 'react';\nimport Formik from 'formik';\n\nexport default function Register() {\n  return (\n    <div className=\"register\">\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n            />\n            {errors.email && touched.email && errors.email}\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n            />\n            {errors.password && touched.password && errors.password}\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </form>\n\n        )}\n\n      </Formik>\n\n    </div>\n  )\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,SAASC,QAAT,GAAoB;EACjC,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,uBACE,QAAC,MAAD;MACE,aAAa,EAAE;QAAEC,IAAI,EAAE,EAAR;QAAYC,KAAK,EAAE,EAAnB;QAAuBC,QAAQ,EAAE;MAAjC,CADjB;MAEE,QAAQ,EAAEC,MAAM,IAAI;QAClB,MAAMC,MAAM,GAAG,EAAf;;QACA,IAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;UACjBG,MAAM,CAACH,KAAP,GAAe,UAAf;QACD,CAFD,MAEO,IACL,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADI,EAEL;UACAG,MAAM,CAACH,KAAP,GAAe,uBAAf;QACD;;QACD,OAAOG,MAAP;MACD,CAZH;MAaE,QAAQ,EAAE,CAACD,MAAD,WAA+B;QAAA,IAAtB;UAAEG;QAAF,CAAsB;QACvCC,UAAU,CAAC,MAAM;UACfC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;UACAG,aAAa,CAAC,KAAD,CAAb;QACD,CAHS,EAGP,GAHO,CAAV;MAID,CAlBH;MAAA,UAoBG;QAAA,IAAC;UACAH,MADA;UAEAC,MAFA;UAGAO,OAHA;UAIAC,YAJA;UAKAC,UALA;UAMAC,YANA;UAOAC;QAPA,CAAD;QAAA,oBASC;UAAM,QAAQ,EAAED,YAAhB;UAAA,wBACE;YACE,IAAI,EAAC,OADP;YAEE,IAAI,EAAC,OAFP;YAGE,QAAQ,EAAEF,YAHZ;YAIE,MAAM,EAAEC,UAJV;YAKE,KAAK,EAAEV,MAAM,CAACF;UALhB;YAAA;YAAA;YAAA;UAAA,QADF,EAQGG,MAAM,CAACH,KAAP,IAAgBU,OAAO,CAACV,KAAxB,IAAiCG,MAAM,CAACH,KAR3C,eASE;YACE,IAAI,EAAC,UADP;YAEE,IAAI,EAAC,UAFP;YAGE,QAAQ,EAAEW,YAHZ;YAIE,MAAM,EAAEC,UAJV;YAKE,KAAK,EAAEV,MAAM,CAACD;UALhB;YAAA;YAAA;YAAA;UAAA,QATF,EAgBGE,MAAM,CAACF,QAAP,IAAmBS,OAAO,CAACT,QAA3B,IAAuCE,MAAM,CAACF,QAhBjD,eAiBE;YAAQ,IAAI,EAAC,QAAb;YAAsB,QAAQ,EAAEa,YAAhC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAjBF;QAAA;UAAA;UAAA;UAAA;QAAA,QATD;MAAA;IApBH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA2DD;KA5DuBhB,Q"},"metadata":{},"sourceType":"module"}