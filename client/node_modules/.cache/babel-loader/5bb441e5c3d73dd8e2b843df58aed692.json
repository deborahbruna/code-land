{"ast":null,"code":"var _jsxFileName = \"/Users/deborahberto/workspaces/code-land/client/src/Home/Regiter.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport useAuth from '../state/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  apiFetch\n} = useAuth();\nexport default function Register() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-form\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: '',\n          email: '',\n          password: ''\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.name) {\n            errors.name = 'Required';\n          } else if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting\n          } = _ref;\n          apiFetch.post(\"auth/register\", {\n            name: values.name,\n            email: values.email,\n            password: values.password\n          }).then(response => {\n            debugger;\n            console.log(response.data);\n            setSubmitting(false);\n          }).catch(err => {\n            console.error(\"ops! ocorreu um erro\" + err);\n          }); // setTimeout(() => {\n          //   alert(JSON.stringify(values, null, 2));\n          //   setSubmitting(false);\n          // }, 400);\n        },\n        children: _ref2 => {\n          let {\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Name\",\n              type: \"name\",\n              name: \"name\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.name,\n              required: errors.name && touched.name && errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Email\",\n              type: \"email\",\n              name: \"email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email,\n              required: errors.email && touched.email && errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Password\",\n              type: \"password\",\n              name: \"password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password,\n              required: errors.password && touched.password && errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-button\",\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Formik","useAuth","apiFetch","Register","name","email","password","values","errors","test","setSubmitting","post","then","response","console","log","data","catch","err","error","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"sources":["/Users/deborahberto/workspaces/code-land/client/src/Home/Regiter.js"],"sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport useAuth from '../state/useAuth';\n\nconst { apiFetch } = useAuth();\n\nexport default function Register() {\n  \n\n  return (\n    <div className=\"register-content\">\n      <div className=\"register-form\">\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validate={values => {\n            const errors = {};\n            if (!values.name) {\n              errors.name = 'Required';\n            } else if (!values.email) {\n              errors.email = 'Required';\n            } else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              errors.email = 'Invalid email address';\n            }\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            apiFetch.post(\"auth/register\", {\n              name: values.name,\n              email: values.email,\n              password: values.password\n            })\n              .then((response) => {\n                debugger\n                console.log(response.data)\n                setSubmitting(false);\n              })\n              .catch((err) => {\n                console.error(\"ops! ocorreu um erro\" + err);\n              });\n            // setTimeout(() => {\n            //   alert(JSON.stringify(values, null, 2));\n            //   setSubmitting(false);\n            // }, 400);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <input\n                placeholder=\"Name\"\n                type=\"name\"\n                name=\"name\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                required={errors.name && touched.name && errors.name}\n              />\n              <input\n                placeholder=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                required={errors.email && touched.email && errors.email}\n              />\n              <input\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                required={errors.password && touched.password && errors.password}\n              />\n              <button className=\"submit-button\" type=\"submit\" disabled={isSubmitting}>\n                Submit\n              </button>\n            </form>\n\n          )}\n\n        </Formik>\n      </div>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}