{"ast":null,"code":"var _jsxFileName = \"/Users/deborahberto/workspaces/code-land/client/src/state/useAuth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport api from '../services/api';\n/**\n * @callback ApiFetchFunction\n * @param {string} url\n * @param {fetch.RequestInit=} opts\n * @param {string=} accessToken\n * @returns {Promise<any>}\n */\n\n/**\n * @typedef AuthContext\n * @property {boolean} isAuthenticated\n * @property {{ uid:string, displayName: string, email:string , manager: { uid:string, name:string, email:string }}} profile\n * @property {boolean} loading\n * @property {Error=} error\n * @property {HasRoleFunction} hasRole\n * @property {ApiFetchFunction} apiFetch\n * @property {ApiFetchFunction} apiFetchFormData\n */\n\n/** @type {React.Context<AuthContext>} */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ctx = /*#__PURE__*/createContext();\nconst noProfile = {\n  roles: []\n};\n/**\n * _fetch() - simple json fetcher with (optional) Bearer Authorization\n *\n * To fetch data:\n *\n * await _fetch(url); // no access token\n * await _fetch(url,null,accessToken); // with access token\n *\n * To post data:\n * \n * await _fetch(url, { method: 'post', body:{ x: 100, y: 'abc' } }, accessToken );\n *\n * @type {ApiFetchFunction} \n */\n\nconst _fetch = function (url) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let accessToken = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (typeof opts.body === 'object') {\n    opts.body = JSON.stringify(opts.body);\n  }\n\n  return api(url, {\n    headers: {\n      Authorization: accessToken ? `Bearer ${accessToken}` : undefined,\n      'Content-Type': 'application/json'\n    },\n    ...opts\n  }).then(async fetchResult => {\n    return fetchResult.json();\n  });\n}; //\n// Provider\n//\n\n\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [profile, setProfile] = useState(noProfile);\n  const [accessToken, setAccessToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    debugger; // get to load the user's session here\n\n    if (!accessToken) {// api('/auth/authenticate', { email, password })\n      // .then(data => {\n      //   // console.log(data);\n      //   if (data.token) {\n      //     setProfile(data.user);\n      //     setAccessToken(data.token);\n      //   } else {\n      //     console.log(data);\n      //     setProfile(noProfile);\n      //     setAccessToken(null);\n      //   }\n      // })\n      // .catch(err => {\n      //   console.error(err);\n      //   setError(err);\n      // })\n      // .then(() => setLoading(false));\n    }\n  }, []);\n  /**\n   * apiFetch - fetch JSON data from the app's api, using the current\n   *            accessToken, if that token has expired attempt to\n   *            get a new accessToken and try again.\n   *\n   * usage:\n   *\n   *   const { apiFetch } = useAuth();\n   *   apiFetch('/api/version')\n   *     .then( data => console.log(data.version) )\n   *     .catch( err => console.error(`unable to get version: ${err.message}`));\n   *\n   * @param {string} url \n   * @param {fetch.RequestInit=} opts \n   */\n\n  const apiFetch = async function (url) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _fetch(url, opts, accessToken).catch(err => {\n      if (!accessToken || err.status !== 401) throw error; // return _fetch('/auth/authenticate', {\n      //   credentials: 'include',\n      // }).then(data => {\n      //   const { ok, accessToken: newAccessToken } = data;\n      //   if (!ok) throw new Error('session has expired');\n      //   setAccessToken(newAccessToken);\n      //   return _fetch(url, opts, newAccessToken);\n      // });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Ctx.Provider, {\n    value: {\n      isAuthenticated: !!accessToken,\n      profile,\n      loading,\n      error,\n      apiFetch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}; //\n// Consumer\n//\n\n_s(AuthProvider, \"MNFG0ySXvz4ShSdFV180HLR6ekw=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return useContext(Ctx);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default useAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","api","Ctx","noProfile","roles","_fetch","url","opts","accessToken","body","JSON","stringify","headers","Authorization","undefined","then","fetchResult","json","AuthProvider","children","profile","setProfile","setAccessToken","loading","setLoading","error","setError","apiFetch","catch","err","status","isAuthenticated","useAuth"],"sources":["/Users/deborahberto/workspaces/code-land/client/src/state/useAuth.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport api from '../services/api';\n\n/**\n * @callback ApiFetchFunction\n * @param {string} url\n * @param {fetch.RequestInit=} opts\n * @param {string=} accessToken\n * @returns {Promise<any>}\n */\n\n/**\n * @typedef AuthContext\n * @property {boolean} isAuthenticated\n * @property {{ uid:string, displayName: string, email:string , manager: { uid:string, name:string, email:string }}} profile\n * @property {boolean} loading\n * @property {Error=} error\n * @property {HasRoleFunction} hasRole\n * @property {ApiFetchFunction} apiFetch\n * @property {ApiFetchFunction} apiFetchFormData\n */\n\n/** @type {React.Context<AuthContext>} */\nconst Ctx = createContext();\n\nconst noProfile = { roles: [] };\n\n/**\n * _fetch() - simple json fetcher with (optional) Bearer Authorization\n *\n * To fetch data:\n *\n * await _fetch(url); // no access token\n * await _fetch(url,null,accessToken); // with access token\n *\n * To post data:\n * \n * await _fetch(url, { method: 'post', body:{ x: 100, y: 'abc' } }, accessToken );\n *\n * @type {ApiFetchFunction} \n */\nconst _fetch = (url, opts = {}, accessToken) => {\n  if (typeof opts.body === 'object') {\n    opts.body = JSON.stringify(opts.body);\n  }\n  return api(url, {\n    headers: {\n      Authorization: accessToken ? `Bearer ${accessToken}` : undefined,\n      'Content-Type': 'application/json',\n    },\n    ...opts,\n  }).then(async fetchResult => {\n    return fetchResult.json();\n  });\n};\n\n//\n// Provider\n//\nexport const AuthProvider = ({ children }) => {\n  const [profile, setProfile] = useState(noProfile);\n  const [accessToken, setAccessToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    debugger\n    // get to load the user's session here\n    if (!accessToken) {\n      // api('/auth/authenticate', { email, password })\n      // .then(data => {\n      //   // console.log(data);\n      //   if (data.token) {\n      //     setProfile(data.user);\n      //     setAccessToken(data.token);\n      //   } else {\n      //     console.log(data);\n      //     setProfile(noProfile);\n      //     setAccessToken(null);\n      //   }\n      // })\n      // .catch(err => {\n      //   console.error(err);\n      //   setError(err);\n      // })\n      // .then(() => setLoading(false));\n    }\n  }, []);\n\n  /**\n   * apiFetch - fetch JSON data from the app's api, using the current\n   *            accessToken, if that token has expired attempt to\n   *            get a new accessToken and try again.\n   *\n   * usage:\n   *\n   *   const { apiFetch } = useAuth();\n   *   apiFetch('/api/version')\n   *     .then( data => console.log(data.version) )\n   *     .catch( err => console.error(`unable to get version: ${err.message}`));\n   *\n   * @param {string} url \n   * @param {fetch.RequestInit=} opts \n   */\n  const apiFetch = async (url, opts = {}) =>\n    _fetch(url, opts, accessToken).catch(err => {\n      if (!accessToken || err.status !== 401) throw error;\n      // return _fetch('/auth/authenticate', {\n      //   credentials: 'include',\n      // }).then(data => {\n      //   const { ok, accessToken: newAccessToken } = data;\n      //   if (!ok) throw new Error('session has expired');\n      //   setAccessToken(newAccessToken);\n      //   return _fetch(url, opts, newAccessToken);\n      // });\n    });\n\n  return (\n    <Ctx.Provider\n      value={{\n        isAuthenticated: !!accessToken,\n        profile,\n        loading,\n        error,\n        apiFetch\n      }}\n    >\n      {children}\n    </Ctx.Provider>\n  );\n};\n\n//\n// Consumer\n//\nconst useAuth = () => {\n  return useContext(Ctx);\n};\n\nexport default useAuth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}